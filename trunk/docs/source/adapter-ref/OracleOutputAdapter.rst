
.. _oracle-output-adapter-ref:

Oracle Output Adapter
=====================

The Oracle Output Adapter is a :ref:`smart-output-config-ref`
that feeds the data to an Oracle database.


Oracle Output Adapter structure
--------------------------------------

::

  {
    "Name": "OracleOutputAdapter",
    "TypeString": "Output",
    "TenantId": "System",
    "ClassName": "com.ligadata.outputadapters.OracleOutputAdapter$",
    "JarName": "oracleoutputadapter_2.11-1.5.3.jar",
    "DependencyJars": [
        "ojdbc6.jar"
    ],
    "adapterSpecificCfg" =
         "jdbcUrl":"jdbc:oracle:thin:@vm002.ligadata.com:1521:KAMANJA",
         "user":"digicell",
         "password":"Carribean2",
         "Encrypted.Encoded.Password":
              "HlC3OVDz5gC+HbDnmN8BUJ41MO9+ofHIlvm0sgFmmG4hKw+xB5hvrHpJ9vMQKOVECwTephZB222OH/
              VqoldeaT47e2TGskhSTkWfYn1GMhiM5T93ldUyuwWjb5U1HvG20sZkZhMNxnad3QXtf+ERtvtlCpQJ/
              ViVjEddEfTjwkw=",
         "PrivateKeyFile": "/home/kamanja/programs/kamanja/config/private.key"
         "SchemaName":"<schema-name>",
         "jarpaths":"/media/home2/installKamanja153/Kamanja-1.5.3_2.11/lib/system",
         "jdbcJar":"ojdbc6.jar",
         "autoCreateTables":"YES",
         "appendOnly":"YES"}"
  }




Parameters
----------

The first few parameters are the standard ones
used for all adapters and described on the
:ref:`adapter-def-config-ref` page.
Note the following:

- **ClassName** - `com.ligadata.outputadapters.OracleOutputAdapter$`
  is the implementation class of the output adapter interface for Oracle.
- **JarName** - `oracleoutputadapter_2.11-1.6.2.jar` (for Release 1.6.2)
  or `oracleoutputadapter_2.11-1.5.3.jar` (for Release 1.5.3).
  is the name of the jar that contains the implementation class.
- **DependencyJars** - must include `ojdbc6.jar`,
  the Oracle thin jdbc driver.


In addition, the **AdapterSpecificCfg** parameter
has the following attributes:

- **jdbcUrl** - Complete Url string for connecting
  to oracle database, including the port number.
  Use the `tnspring <http://www.orafaq.com/wiki/Tnsping>`_ command
  to show the port number.
- **user**, **password** - user name and password used
  to connect to the Oracle database
  if you do not use the encrypted/encoded password feature.
  For Kamanja releases prior to 1.6.3, you must use
  the **user** and **password**.
- **Encrypted.Encoded.Password** - Password generated by
  :ref:`generatekeys-command-ref` to implement
  :ref:`encrypted and encoded passwords<password-encrypt-term>`.
  Note that this feature is only available in Kamanja 1.6.1 and later.
  To implement this feature in your application,
  you must populate this parameter and the next one
  for the smart input adapter you are using.
- **PrivateKeyFile** - private.key file to use for your application.
  You can use :ref:`generatekeys-command-ref` to create this file
  for testing.
- **jarpaths** - full pathname of the directory that contains
  the Oracle jdbc driver jar file.
- **jdbcJar** - name of the Oracle jdbc thin driver file
- **autoCreateTables** - set to NO to prevent Kamanja from creating tables
- **appendOnly** - set to YES to append new data is to existing data;
  set to NO if duplicates are not be allowed --
  note that this is an expensive option in terms of performance.

Usage
-----

Names in the :ref:`message definition<message-def-config-ref>`
become column names in the Oracle database.
The types specified are mapped to corresponding Oracle types
with the following caveats:

- All Kamanja decimal types are mapped to NUMBER type in Oracle.
- A Kamanja Boolean type is mapped to varchar2(5)
  because Kamanja ouputs a Boolean value as "true" or "false"
- A String type is mapped to varchar2(4000)
  because, while the Kamanja :ref:`message definition<message-def-config-ref>`
  does not limit the size of the string,
  the Oracle VARCHAR2 type requires a size when a table is being created.

Note the following limitations:

- Only Basic :ref:`Types<types-term>` are supported;
  this includes Integer, double, Float, String, and Boolean.
- The tableName in oracle is restricted to 30 characters,
  so all API functions should use a plain className
  (without the package name).

See also
--------

- :ref:`adapter-binding-config-ref`
- :ref:`adapter-def-config-ref`

- :ref:`oracle-output-adapter-api`


