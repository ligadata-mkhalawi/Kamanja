
.. _container-term:

Containers
----------

A Kamanja container holds reference data that a model uses.
For example, this might map state abbreviations
(such as MI or AZ) to full state names (Michigan or Arizona),
or it might match zip codes/postal codes to states/provinces.

A container is represented in Kamanja as a class,
generated by the message compiler
from a JSON container specification
that is submitted through the metadata API interface.
The class contains instance methods for ingesting messages
from a variety of formats,
including :ref:`JSON<json-term>`, :ref:`CSV<csv-term>`,
and native format used to store it in a persistent store.
:ref:`Serialization/de-serialization<serial-deserial-term>` methods
are available to aid these operations.
All of these behaviors are generated by the Kamanja message compiler.

Containers have a structure that is nearly identical
to the  message structure but they are used in a slightly different way.
Conceptually, containers hold information that the user wants to keep
versus the input message that describes the message presented to the model.
Containers are more like descriptions of information
that the model may want to maintain in order to interpret future messages.
Containers have state information that the model needs.

For more information:

- :ref:`container-def-config-ref` shows the structure used
  to define a container
- Use the :ref:`JdbcDataCollector.sh<jdbcdatacollector-command-ref>` command
  to extract data from an external relational database
  into a local file that can then be loaded into a container.

